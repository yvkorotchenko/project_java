name: Java CI with Maven and Docker

on:
  push:
    branches:
      - master  # Виконувати на пуші в гілку master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Крок 1: Клонування репозиторію
      - name: Checkout repository
        uses: actions/checkout@v3

      # Крок 2: Логін в GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Крок 3: Створення Docker образу
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/my-java-app:${{ github.sha }} .
          
      # Витягуємо JAR без створення нового контейнера
          container_id=$(docker create ghcr.io/${{ github.actor }}/my-java-app:${{ github.sha }})
          docker exec $container_id ls -lah /app/target
#          docker cp $container_id:/app/target/helloworld-1.0-SNAPSHOT.jar ./helloworld.jar
#          docker rm $container_id

      # Крок 4: Публікація Docker образу в GitHub Container Registry
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.actor }}/my-java-app:${{ github.sha }}

      # Крок 5: Збереження зібраного JAR файлу як артефакт
#      - name: Upload JAR artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: helloworld-jar
#          path: target/helloworld-1.0-SNAPSHOT.jar
